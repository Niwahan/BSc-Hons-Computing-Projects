
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author
 */
public class HospitalInfo extends javax.swing.JFrame {

    /**
     * Creates new form HospitalInfo
     */
    public HospitalInfo() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hospital Information System");
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Category_JBG = new javax.swing.ButtonGroup();
        Ratings_JBG = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        HospitalName_JL = new javax.swing.JLabel();
        HospitalName_JTF = new javax.swing.JTextField();
        Location_JTF = new javax.swing.JTextField();
        Category_JL = new javax.swing.JLabel();
        Speciality_JL = new javax.swing.JLabel();
        Location_JL = new javax.swing.JLabel();
        Ratings_JL = new javax.swing.JLabel();
        Facilities_JL = new javax.swing.JLabel();
        PhNo_JL = new javax.swing.JLabel();
        PhNo_JTF = new javax.swing.JTextField();
        Governmental_JRB = new javax.swing.JRadioButton();
        Private_JRB = new javax.swing.JRadioButton();
        Clinic_JRB = new javax.swing.JRadioButton();
        Speciality_JCombo = new javax.swing.JComboBox<>();
        One_JRB = new javax.swing.JRadioButton();
        Three_JRB = new javax.swing.JRadioButton();
        Two_JRB = new javax.swing.JRadioButton();
        Four_JRB = new javax.swing.JRadioButton();
        Five_JRB = new javax.swing.JRadioButton();
        Pharmacy_JCB = new javax.swing.JCheckBox();
        Canteen_JCB = new javax.swing.JCheckBox();
        Emergency_JCB = new javax.swing.JCheckBox();
        Ambulance_JCB = new javax.swing.JCheckBox();
        ICU_JCB = new javax.swing.JCheckBox();
        Others_JCB = new javax.swing.JCheckBox();
        Add_JB = new javax.swing.JButton();
        Clear_JB = new javax.swing.JButton();
        Title_JL = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Hospital_JTable = new javax.swing.JTable();
        Spl_JCB = new javax.swing.JComboBox<>();
        SearchSpecialty_JB = new javax.swing.JButton();
        Search_TF = new javax.swing.JTextField();
        ClearAll_JB = new javax.swing.JButton();
        ClearData_JB = new javax.swing.JButton();
        Search_BTN = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        File_JM = new javax.swing.JMenu();
        Open_JMI = new javax.swing.JMenuItem();
        Save_JMI = new javax.swing.JMenuItem();
        Exit_JMI = new javax.swing.JMenuItem();
        Help_JM = new javax.swing.JMenu();
        Help_JMI = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bell MT", 1, 24))); // NOI18N

        HospitalName_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HospitalName_JL.setText("Hospital Name");

        Category_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category_JL.setText("Category");

        Speciality_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Speciality_JL.setText("Specialty");

        Location_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Location_JL.setText("Location");

        Ratings_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Ratings_JL.setText("Ratings");

        Facilities_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Facilities_JL.setText("Facilities");

        PhNo_JL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PhNo_JL.setText("Phone Number");

        Category_JBG.add(Governmental_JRB);
        Governmental_JRB.setText("Governmental");

        Category_JBG.add(Private_JRB);
        Private_JRB.setText("Private");

        Category_JBG.add(Clinic_JRB);
        Clinic_JRB.setText("Clinic");

        Speciality_JCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eye", "Heart", "Neuro", "Skin", "Dental", "Cancer", "All" }));

        Ratings_JBG.add(One_JRB);
        One_JRB.setText("1 Star");

        Ratings_JBG.add(Three_JRB);
        Three_JRB.setText("3 Star");

        Ratings_JBG.add(Two_JRB);
        Two_JRB.setText("2 Star");

        Ratings_JBG.add(Four_JRB);
        Four_JRB.setText("4 Star");

        Ratings_JBG.add(Five_JRB);
        Five_JRB.setText("5 Star");

        Pharmacy_JCB.setText("Pharmacy");

        Canteen_JCB.setText("Canteen");

        Emergency_JCB.setText("Emergency");

        Ambulance_JCB.setText("Ambulance");

        ICU_JCB.setText("ICU");

        Others_JCB.setText("others");

        Add_JB.setText("ADD to Table");
        Add_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_JBActionPerformed(evt);
            }
        });

        Clear_JB.setText("Clear Form");
        Clear_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_JBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Facilities_JL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Ratings_JL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Location_JL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Speciality_JL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Category_JL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PhNo_JL, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhNo_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Pharmacy_JCB)
                                            .addComponent(Ambulance_JCB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ICU_JCB)
                                            .addComponent(Canteen_JCB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Others_JCB)
                                            .addComponent(Emergency_JCB)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(Governmental_JRB)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(Private_JRB))
                                                .addComponent(Speciality_JCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Clinic_JRB, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(One_JRB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Two_JRB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Three_JRB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Four_JRB)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Five_JRB))
                                        .addComponent(Location_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HospitalName_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(HospitalName_JL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(Add_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Clear_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HospitalName_JL)
                    .addComponent(HospitalName_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Category_JL)
                    .addComponent(Governmental_JRB)
                    .addComponent(Private_JRB)
                    .addComponent(Clinic_JRB))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Speciality_JL)
                    .addComponent(Speciality_JCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Location_JL)
                    .addComponent(Location_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ratings_JL)
                    .addComponent(One_JRB)
                    .addComponent(Two_JRB)
                    .addComponent(Three_JRB)
                    .addComponent(Four_JRB)
                    .addComponent(Five_JRB))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Facilities_JL)
                    .addComponent(Pharmacy_JCB)
                    .addComponent(Canteen_JCB)
                    .addComponent(Emergency_JCB))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ambulance_JCB)
                    .addComponent(ICU_JCB)
                    .addComponent(Others_JCB))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhNo_JL)
                    .addComponent(PhNo_JTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clear_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        Title_JL.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        Title_JL.setText("Hospital Management System");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hospital Details", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bell MT", 1, 24))); // NOI18N

        Hospital_JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name", "Category", "Specialty", "Location", "Star Rating", "Facilities", "Phone No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Hospital_JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Hospital_JTable.setShowGrid(true);
        Hospital_JTable.setShowHorizontalLines(false);
        Hospital_JTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Hospital_JTable);
        if (Hospital_JTable.getColumnModel().getColumnCount() > 0) {
            Hospital_JTable.getColumnModel().getColumn(0).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            Hospital_JTable.getColumnModel().getColumn(1).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(1).setPreferredWidth(45);
            Hospital_JTable.getColumnModel().getColumn(2).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(2).setPreferredWidth(20);
            Hospital_JTable.getColumnModel().getColumn(3).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            Hospital_JTable.getColumnModel().getColumn(4).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(4).setPreferredWidth(15);
            Hospital_JTable.getColumnModel().getColumn(5).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(5).setPreferredWidth(255);
            Hospital_JTable.getColumnModel().getColumn(6).setResizable(false);
            Hospital_JTable.getColumnModel().getColumn(6).setPreferredWidth(25);
        }

        Spl_JCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eye", "Heart", "Neuro", "Skin", "Dental", "Cancer", "All" }));

        SearchSpecialty_JB.setText("Hospitals with Specialty");
        SearchSpecialty_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchSpecialty_JBActionPerformed(evt);
            }
        });

        Search_TF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Search_TF.setName(""); // NOI18N

        ClearAll_JB.setText("Clear All Data");
        ClearAll_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAll_JBActionPerformed(evt);
            }
        });

        ClearData_JB.setText("Clear Data");
        ClearData_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearData_JBActionPerformed(evt);
            }
        });

        Search_BTN.setText("Search Hospital");
        Search_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_BTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Spl_JCB, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchSpecialty_JB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 350, Short.MAX_VALUE)
                .addComponent(Search_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search_BTN)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ClearData_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(ClearAll_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spl_JCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchSpecialty_JB)
                    .addComponent(Search_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search_BTN))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearData_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearAll_JB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jMenuBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 2, true));

        File_JM.setText("File");

        Open_JMI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Open_JMI.setText("Open");
        Open_JMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_JMIActionPerformed(evt);
            }
        });
        File_JM.add(Open_JMI);

        Save_JMI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Save_JMI.setText("Save");
        Save_JMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_JMIActionPerformed(evt);
            }
        });
        File_JM.add(Save_JMI);

        Exit_JMI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Exit_JMI.setText("Exit");
        Exit_JMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_JMIActionPerformed(evt);
            }
        });
        File_JM.add(Exit_JMI);

        jMenuBar.add(File_JM);

        Help_JM.setText("Help");

        Help_JMI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Help_JMI.setText("Help");
        Help_JMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Help_JMIActionPerformed(evt);
            }
        });
        Help_JM.add(Help_JMI);

        jMenuBar.add(Help_JM);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title_JL)
                .addGap(411, 411, 411))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title_JL)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchSpecialty_JBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchSpecialty_JBActionPerformed
        // TODO add your handling code here:
        try {
            int i = 0;
            ArrayList<String> list = new ArrayList<String>();
            String spl = Spl_JCB.getSelectedItem().toString();
            while (i < Hospital_JTable.getRowCount()) {
                String s = (String) Hospital_JTable.getValueAt(i, 2);
                if (s != null && s.length() != 0) {
                    list.add(s);
                }
                i++;
            }

            String search = "";
            int cnt = 0;
            int j = 0;

            for (String c : list) {
                if (spl.equals(c)) {
                    if (cnt == 0) {
                        search = search + Hospital_JTable.getValueAt(j, 0);
                    } else {
                        search = search + ", " + Hospital_JTable.getValueAt(j, 0);
                    }
                    cnt++;
                }
                j++;
            }

            if (cnt == 0) {
                JOptionPane.showMessageDialog(this, "No match found!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Total found Hospital: " + cnt + "\nFound Hospital Name:- " + "\n" + search, "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception expt) {
            JOptionPane.showMessageDialog(this, "Table found Empty!!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_SearchSpecialty_JBActionPerformed

    private void Save_JMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_JMIActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        int reply = chooser.showSaveDialog(null);
        if (reply == JFileChooser.APPROVE_OPTION) {
            File savefile = chooser.getSelectedFile();
            try {
                FileWriter fw = new FileWriter(savefile);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < Hospital_JTable.getRowCount(); i++) {
                    for (int j = 0; j < Hospital_JTable.getColumnCount(); j++) {
                        bw.write((String) Hospital_JTable.getValueAt(i, j) + ",");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_Save_JMIActionPerformed

    private void Exit_JMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_JMIActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_Exit_JMIActionPerformed

    private void Open_JMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_JMIActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        int reply = chooser.showOpenDialog(null);
        DefaultTableModel model = (DefaultTableModel) Hospital_JTable.getModel();
        if (reply == JFileChooser.APPROVE_OPTION) {
            File file = new File(chooser.getSelectedFile().getAbsolutePath());
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                Object[] row = br.lines().toArray();
                for (int i = 0; i < row.length; i++) {
                    String line = row[i].toString().trim();
                    String[] data = line.split(",");
                    model.addRow(data);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(HospitalInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Open_JMIActionPerformed

    private void Add_JBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_JBActionPerformed
        String hospitalName = HospitalName_JTF.getText();
        String location = Location_JTF.getText();
        String number = PhNo_JTF.getText();

        if (hospitalName.isBlank() || location.isBlank() || number.isBlank()) {
            JOptionPane.showMessageDialog(this, "Textfields left empty!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                int x = 0;
                boolean present = false;
                ArrayList<String> al = new ArrayList<String>();
                while (x < Hospital_JTable.getRowCount()) {
                    String s = (String) Hospital_JTable.getValueAt(x, 0);
                    if (s != null && s.length() != 0) {
                        al.add(s);
                    }
                    x++;
                }

                Governmental_JRB.setActionCommand("Governmental");
                Private_JRB.setActionCommand("Private");
                Clinic_JRB.setActionCommand("Clinic");
                String category = Category_JBG.getSelection().getActionCommand();
                String specialty = (String) Speciality_JCombo.getSelectedItem();
                One_JRB.setActionCommand("1");
                Two_JRB.setActionCommand("2");
                Three_JRB.setActionCommand("3");
                Four_JRB.setActionCommand("4");
                Five_JRB.setActionCommand("5");
                String facilities = "";

                try {
                    for (String name : al) {
                        if (hospitalName.equals(name)) {
                            present = true;
                        }
                    }
                    if (present == true) {
                        JOptionPane.showMessageDialog(this, "Hospital Name already exists!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } else {
                        int rating = Integer.parseInt(Ratings_JBG.getSelection().getActionCommand());
                        int phone = Integer.parseInt(number);
                        DefaultTableModel def_model = (DefaultTableModel) Hospital_JTable.getModel();
                        def_model.addRow(new Object[]{null, null, null, null, null, null, null});

                        if (Pharmacy_JCB.isSelected()) {
                            facilities += Pharmacy_JCB.getText() + "  ";
                        }
                        if (Canteen_JCB.isSelected()) {
                            facilities += Canteen_JCB.getText() + "  ";
                        }
                        if (Emergency_JCB.isSelected()) {
                            facilities += Emergency_JCB.getText() + "  ";
                        }
                        if (Ambulance_JCB.isSelected()) {
                            facilities += Ambulance_JCB.getText() + "  ";
                        }
                        if (ICU_JCB.isSelected()) {
                            facilities += ICU_JCB.getText() + "  ";
                        }
                        if (Others_JCB.isSelected()) {
                            facilities += Others_JCB.getText();
                        }

                        String[] value = {hospitalName, category, specialty, location, String.valueOf(rating).toString(), facilities, number};
                        int rows = Hospital_JTable.getRowCount();
                        int columns = Hospital_JTable.getColumnCount();
                        int index = 0;
                        do {
                            String s = (String) Hospital_JTable.getValueAt(index, 0);
                            if (s != null && s.length() != 0) {
                                index++;
                            } else {
                                for (int i = 0; i < columns; i++) {
                                    Hospital_JTable.setValueAt(value[i], index, i);
                                }
                                break;
                            }
                        } while (index < rows);
                    }
                } catch (NumberFormatException expt) {
                    JOptionPane.showMessageDialog(this, "Phone Number must be an integer value!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Enter all the values first!!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_Add_JBActionPerformed

    private void Clear_JBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_JBActionPerformed
        // TODO add your handling code here:
        HospitalName_JTF.setText(null);
        Category_JBG.clearSelection();
        Speciality_JCombo.setSelectedIndex(0);
        Location_JTF.setText(null);
        Ratings_JBG.clearSelection();
        Pharmacy_JCB.setSelected(false);
        Canteen_JCB.setSelected(false);
        Emergency_JCB.setSelected(false);
        Ambulance_JCB.setSelected(false);
        ICU_JCB.setSelected(false);
        Others_JCB.setSelected(false);
        PhNo_JTF.setText(null);
        JOptionPane.showMessageDialog(this, "Form Cleared!!");
    }//GEN-LAST:event_Clear_JBActionPerformed

    private void ClearAll_JBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAll_JBActionPerformed
        // TODO add your handling code here:
        DefaultTableModel def_model = (DefaultTableModel) Hospital_JTable.getModel();

        if (def_model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Values not found in Table!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            def_model.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Values in Table deleted successfully!!");
        }
    }//GEN-LAST:event_ClearAll_JBActionPerformed

    private void ClearData_JBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearData_JBActionPerformed
        // TODO add your handling code here:
        DefaultTableModel def_model = (DefaultTableModel) Hospital_JTable.getModel();

        if (Hospital_JTable.getSelectedRow() != -1) {
            // remove the selected row from the table model
            def_model.removeRow(Hospital_JTable.getSelectedRow());
            JOptionPane.showMessageDialog(this, "Selected Row Deleted successfully");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row in table.");
        }
    }//GEN-LAST:event_ClearData_JBActionPerformed

    private void Search_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_BTNActionPerformed
        // TODO add your handling code here:           
        try {
            int search = Integer.parseInt(Search_TF.getText());
            if (0 < search && search < 6) {
                String name = "";
                int note = 0;
                ArrayList<Integer> rate = new ArrayList<Integer>();

                int x = 0;
                while (x < Hospital_JTable.getRowCount()) {
                    int s = Integer.parseInt((String) Hospital_JTable.getValueAt(x, 4));
                    rate.add(s);
                    x++;
                }

                Integer arr[] = rate.toArray(new Integer[0]);

                for (int i = 0; i < arr.length - 1; i++) {
                    int min = i;
                    for (int j = i + 1; j < arr.length; j++) {
                        if (arr[j] < arr[min]) {
                            min = j;
                        }
                    }
                    if (i != min) {
                        int temp = arr[i];
                        arr[i] = arr[min];
                        arr[min] = temp;
                    }
                }

                int start = 0;
                int end = arr.length - 1;
                int result = BinarySearch(arr, start, end, search);
                if (result == -1) {
                    JOptionPane.showMessageDialog(this, "No Match found!!");
                } else {
                    for (Integer each : rate) {
                        if (arr[result] == each) {
                            note++;
                        }
                    }

                    for (int i = 0; i < Hospital_JTable.getRowCount(); i++) {
                        if (arr[result] == Integer.parseInt((String) Hospital_JTable.getValueAt(i, 4))) {
                            name = name + Hospital_JTable.getValueAt(i, 0);
                            break;
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Total found Hospital: " + note + "\nFound Hospital Name:- " + "\n" + name, "Information", JOptionPane.INFORMATION_MESSAGE);

                }
            } else {
                JOptionPane.showMessageDialog(this, "Enter Numeric Values from 1 to 5!!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Numeric Values Required!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Search_BTNActionPerformed

    private void Help_JMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Help_JMIActionPerformed
        try {
            if (Desktop.isDesktopSupported()) {
                File help = new File("User Manual.pdf");
                Desktop.getDesktop().open(help);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "File not found!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Help_JMIActionPerformed

    public int BinarySearch(Integer arr[], int start, int end, int search) {
        if (start <= end) {
            int mid = (start + end) / 2;
            if (arr[mid] == search) {
                return mid;
            } else if (search < arr[mid]) {
                return BinarySearch(arr, start, mid - 1, search);
            } else {
                return BinarySearch(arr, mid + 1, end, search);
            }
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_JB;
    private javax.swing.JCheckBox Ambulance_JCB;
    private javax.swing.JCheckBox Canteen_JCB;
    private javax.swing.ButtonGroup Category_JBG;
    private javax.swing.JLabel Category_JL;
    private javax.swing.JButton ClearAll_JB;
    private javax.swing.JButton ClearData_JB;
    private javax.swing.JButton Clear_JB;
    private javax.swing.JRadioButton Clinic_JRB;
    private javax.swing.JCheckBox Emergency_JCB;
    private javax.swing.JMenuItem Exit_JMI;
    private javax.swing.JLabel Facilities_JL;
    private javax.swing.JMenu File_JM;
    private javax.swing.JRadioButton Five_JRB;
    private javax.swing.JRadioButton Four_JRB;
    private javax.swing.JRadioButton Governmental_JRB;
    private javax.swing.JMenu Help_JM;
    private javax.swing.JMenuItem Help_JMI;
    private javax.swing.JLabel HospitalName_JL;
    private javax.swing.JTextField HospitalName_JTF;
    private javax.swing.JTable Hospital_JTable;
    private javax.swing.JCheckBox ICU_JCB;
    private javax.swing.JLabel Location_JL;
    private javax.swing.JTextField Location_JTF;
    private javax.swing.JRadioButton One_JRB;
    private javax.swing.JMenuItem Open_JMI;
    private javax.swing.JCheckBox Others_JCB;
    private javax.swing.JLabel PhNo_JL;
    private javax.swing.JTextField PhNo_JTF;
    private javax.swing.JCheckBox Pharmacy_JCB;
    private javax.swing.JRadioButton Private_JRB;
    private javax.swing.ButtonGroup Ratings_JBG;
    private javax.swing.JLabel Ratings_JL;
    private javax.swing.JMenuItem Save_JMI;
    private javax.swing.JButton SearchSpecialty_JB;
    private javax.swing.JButton Search_BTN;
    private javax.swing.JTextField Search_TF;
    private javax.swing.JComboBox<String> Speciality_JCombo;
    private javax.swing.JLabel Speciality_JL;
    private javax.swing.JComboBox<String> Spl_JCB;
    private javax.swing.JRadioButton Three_JRB;
    private javax.swing.JLabel Title_JL;
    private javax.swing.JRadioButton Two_JRB;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
